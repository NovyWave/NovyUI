use zoon::*;
use crate::tokens::*;
use crate::components::*;

pub fn input_examples() -> impl Element {
    Column::new()
        .s(Gap::new().y(SPACING_16))
        .item(h4("Inputs"))
        .item(small("Different variants:"))
        .item(
            Column::new()
                .s(Gap::new().y(SPACING_12))
                .s(Width::exact(400))
                .item(
                    input()
                        .placeholder("Enter your name...")
                        .build()
                )
                .item(
                    input()
                        .placeholder("Enter text...")
                        .value("Invalid value")
                        .error_message("This field has an error")
                        .build()
                )
                .item(
                    input()
                        .placeholder("Enter text...")
                        .value("Valid value")
                        .build()
                )
        )
        .item(small("Different sizes:"))
        .item(
            Column::new()
                .s(Gap::new().y(SPACING_12))
                .s(Width::exact(400))
                .item(
                    input()
                        .placeholder("Small input...")
                        .size(InputSize::Small)
                        .build()
                )
                .item(
                    input()
                        .placeholder("Medium input...")
                        .size(InputSize::Medium)
                        .build()
                )
                .item(
                    input()
                        .placeholder("Large input...")
                        .size(InputSize::Large)
                        .build()
                )
        )
        .item(small("With icons:"))
        .item(
            Column::new()
                .s(Gap::new().y(SPACING_12))
                .s(Width::exact(400))
                .item(
                    input()
                        .placeholder("Enter username...")
                        .left_icon(IconName::User)
                        .build()
                )
                .item(
                    input()
                        .placeholder("Enter email...")
                        .left_icon(IconName::Mail)
                        .input_kind(InputKind::Email)
                        .build()
                )
                .item(
                    input()
                        .placeholder("Search...")
                        .left_icon(IconName::Search)
                        .input_kind(InputKind::Search)
                        .build()
                )
        )
        .item(small("With labels:"))
        .item(
            Column::new()
                .s(Gap::new().y(SPACING_12))
                .s(Width::exact(400))
                .item(
                    input()
                        .label("Full Name")
                        .placeholder("Enter your full name...")
                        .required(true)
                        .left_icon(IconName::User)
                        .build()
                )
                .item(
                    input()
                        .label("Email Address")
                        .placeholder("Enter email...")
                        .value("invalid@")
                        .error_message("Please enter a valid email address")
                        .required(true)
                        .left_icon(IconName::Mail)
                        .input_kind(InputKind::Email)
                        .build()
                )
        )
        .item(small("Different states:"))
        .item(
            Column::new()
                .s(Gap::new().y(SPACING_12))
                .s(Width::exact(400))
                .item(
                    input()
                        .placeholder("Disabled input...")
                        .disabled()
                        .left_icon(IconName::Lock)
                        .build()
                )
                .item(
                    input()
                        .placeholder("Readonly input...")
                        .value("Read-only value")
                        .readonly()
                        .left_icon(IconName::Eye)
                        .build()
                )
        )
}
